var J=Object.defineProperty;var K=(o,e,n)=>e in o?J(o,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[e]=n;var i=(o,e,n)=>(K(o,typeof e!="symbol"?e+"":e,n),n);import{s as Q,o as V,n as W}from"../chunks/scheduler.b0c1c2c3.js";import{S as Z,i as tt,r as B,u as L,v as M,d as T,t as D,w as I,g as et,s as Y,h as nt,z as st,c as H,a as G,f as O}from"../chunks/index.b5e22aac.js";import{E as at,G as ot,a as rt,s as ct,u as it,b as lt,C as mt}from"../chunks/setup.41a98375.js";import{D as ut,C as ft}from"../chunks/code.017dda36.js";import{b as pt}from"../chunks/paths.f2b91c98.js";const ht=.5*(Math.sqrt(3)-1),v=(3-Math.sqrt(3))/6,U=o=>Math.floor(o)|0,X=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function A(o=Math.random){const e=yt(o),n=new Float64Array(e).map(s=>X[s%12*2]),t=new Float64Array(e).map(s=>X[s%12*2+1]);return function(r,c){let l=0,a=0,m=0;const _=(r+c)*ht,u=U(r+_),y=U(c+_),d=(u+y)*v,F=u-d,k=y-d,f=r-F,g=c-k;let C,j;f>g?(C=1,j=0):(C=0,j=1);const R=f-C+v,q=g-j+v,z=f-1+2*v,E=g-1+2*v,N=u&255,P=y&255;let b=.5-f*f-g*g;if(b>=0){const p=N+e[P],x=n[p],S=t[p];b*=b,l=b*b*(x*f+S*g)}let $=.5-R*R-q*q;if($>=0){const p=N+C+e[P+j],x=n[p],S=t[p];$*=$,a=$*$*(x*R+S*q)}let w=.5-z*z-E*E;if(w>=0){const p=N+1+e[P+1],x=n[p],S=t[p];w*=w,m=w*w*(x*z+S*E)}return 70*(l+a+m)}}function yt(o){const n=new Uint8Array(512);for(let t=0;t<512/2;t++)n[t]=t;for(let t=0;t<512/2-1;t++){const s=t+~~(o()*(256-t)),r=n[t];n[t]=n[s],n[s]=r}for(let t=256;t<512;t++)n[t]=n[t-256];return n}class dt{constructor(e){i(this,"decay",!1);i(this,"decayRate",.65);i(this,"intensity",.5);i(this,"maxPitch",.05);i(this,"maxRoll",.05);i(this,"maxYaw",.05);i(this,"pitchFrequency",5e-4);i(this,"rollFrequency",5e-4);i(this,"yawFrequency",5e-4);i(this,"object");i(this,"enabled",!0);i(this,"saveRotation");i(this,"update");const n=new at,t=A(),s=A(),r=A();let c=!0,l=0,a=performance.now();const m=()=>{n.copy(this.object.rotation)},_=()=>{const u=performance.now(),y=u-a;l+=y,a=u;const d=this.intensity**2,F=this.maxPitch*d*s(l*this.pitchFrequency,1),k=this.maxYaw*d*t(l*this.yawFrequency,1),f=this.maxRoll*d*r(l*this.rollFrequency,1);this.object.rotation.set(n.x+F,n.y+k,n.z+f),this.decay&&this.intensity>0&&(this.intensity-=this.decayRate*y,this.intensity<0?this.intensity=0:this.intensity>1&&(this.intensity=1))};Object.defineProperty(this,"enabled",{get(){return c},set(u){c=u,c&&m()},enumerable:!0,configurable:!0}),this.object=e,this.saveRotation=m,this.update=_,m()}}class gt extends dt{constructor(n,t){super(n);i(this,"controls");let s;Object.defineProperty(this,"controls",{get(){return s},set(r){s!==void 0&&s.removeEventListener("change",this.saveRotation),s=r,s!==void 0&&s.addEventListener("change",this.saveRotation)},enumerable:!0,configurable:!0}),this.controls=t}}const bt=`
import * as THREE from 'three'
import { CameraShake } from 'trzy'

const camera = new THREE.PerspectiveCamera()
const cameraShake = new CameraShake(camera)

// If using controls, register them
cameraShake.controls = orbitControls

// In your game loop, before rendering your scene
cameraShake.update()

// If you wish to disable
cameraShake.enabled = false
`,$t=new ot;let h;const wt=async()=>{if(h)return h;const o=await $t.loadAsync(`${pt}/glb/strawberry.glb`);return h=new rt,h.add(o.scene.getObjectByName("Stem"),o.scene.getObjectByName("Seeds"),o.scene.getObjectByName("Leaves"),o.scene.getObjectByName("Body")),h.name="Strawberry",h.scale.setScalar(.5),h};function xt(o){let e,n="Uses simplex noise to shake the camera.",t,s,r,c,l;return s=new mt({}),c=new ft({props:{code:bt}}),{c(){e=et("p"),e.textContent=n,t=Y(),B(s.$$.fragment),r=Y(),B(c.$$.fragment)},l(a){e=nt(a,"P",{"data-svelte-h":!0}),st(e)!=="svelte-1395g4f"&&(e.textContent=n),t=H(a),L(s.$$.fragment,a),r=H(a),L(c.$$.fragment,a)},m(a,m){G(a,e,m),G(a,t,m),M(s,a,m),G(a,r,m),M(c,a,m),l=!0},p:W,i(a){l||(T(s.$$.fragment,a),T(c.$$.fragment,a),l=!0)},o(a){D(s.$$.fragment,a),D(c.$$.fragment,a),l=!1},d(a){a&&(O(e),O(t),O(r)),I(s,a),I(c,a)}}}function St(o){let e,n;return e=new ut({props:{title:"CameraShake",$$slots:{default:[xt]},$$scope:{ctx:o}}}),{c(){B(e.$$.fragment)},l(t){L(e.$$.fragment,t)},m(t,s){M(e,t,s),n=!0},p(t,[s]){const r={};s&1&&(r.$$scope={dirty:s,ctx:t}),e.$set(r)},i(t){n||(T(e.$$.fragment,t),n=!0)},o(t){D(e.$$.fragment,t),n=!1},d(t){I(e,t)}}}function vt(o){return V(()=>{const e=ct(),{scene:n,camera:t}=it(),s=new gt(t.current,e);s.intensity=1;const{stop:r}=lt(()=>s.update());return wt().then(c=>n.add(c)),()=>{r()}}),[]}class qt extends Z{constructor(e){super(),tt(this,e,vt,St,Q,{})}}export{qt as component};
