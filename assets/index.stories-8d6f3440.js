var T=Object.defineProperty;var U=(n,e,i)=>e in n?T(n,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[e]=i;var a=(n,e,i)=>(U(n,typeof e!="symbol"?e+"":e,i),i);import{E as X,t as B}from"./index-de99f9b2.js";import{s as H}from"./lib-170271b8.js";const I=.5*(Math.sqrt(3)-1),d=(3-Math.sqrt(3))/6,M=n=>Math.floor(n)|0,G=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function z(n=Math.random){const e=J(n),i=new Float64Array(e).map(s=>G[s%12*2]),t=new Float64Array(e).map(s=>G[s%12*2+1]);return function(o,R){let N=0,E=0,P=0;const j=(o+R)*I,g=M(o+j),S=M(R+j),A=(g+S)*d,L=g-A,O=S-A,c=o-L,l=R-O;let f,w;c>l?(f=1,w=0):(f=0,w=1);const F=c-f+d,b=l-w+d,v=c-1+2*d,C=l-1+2*d,k=g&255,q=S&255;let h=.5-c*c-l*l;if(h>=0){const r=k+e[q],u=i[r],p=t[r];h*=h,N=h*h*(u*c+p*l)}let m=.5-F*F-b*b;if(m>=0){const r=k+f+e[q+w],u=i[r],p=t[r];m*=m,E=m*m*(u*F+p*b)}let y=.5-v*v-C*C;if(y>=0){const r=k+1+e[q+1],u=i[r],p=t[r];y*=y,P=y*y*(u*v+p*C)}return 70*(N+E+P)}}function J(n){const i=new Uint8Array(512);for(let t=0;t<512/2;t++)i[t]=t;for(let t=0;t<512/2-1;t++){const s=t+~~(n()*(256-t)),o=i[t];i[t]=i[s],i[s]=o}for(let t=256;t<512;t++)i[t]=i[t-256];return i}class K{constructor(e){a(this,"decay",!1);a(this,"decayRate",.65);a(this,"intensity",.5);a(this,"maxPitch",.05);a(this,"maxRoll",.05);a(this,"maxYaw",.05);a(this,"pitchFrequency",5e-4);a(this,"rollFrequency",5e-4);a(this,"yawFrequency",5e-4);a(this,"time",0);a(this,"yawNoise",z());a(this,"pitchNoise",z());a(this,"rollNoise",z());a(this,"then",0);a(this,"activeControls",null);a(this,"initialRotation",new X);a(this,"camera");a(this,"updateRotation",()=>{this.initialRotation.copy(this.camera.rotation)});a(this,"update",e=>{this.time+=e;const i=this.intensity**2,t=this.maxYaw*i*this.yawNoise(this.time*this.yawFrequency,1),s=this.maxPitch*i*this.pitchNoise(this.time*this.pitchFrequency,1),o=this.maxRoll*i*this.rollNoise(this.time*this.rollFrequency,1);this.camera.rotation.set(this.initialRotation.x+s,this.initialRotation.y+t,this.initialRotation.z+o),this.decay&&this.intensity>0&&(this.intensity-=this.decayRate*e,this.intensity<0?this.intensity=0:this.intensity>1&&(this.intensity=1))});this.camera=e}enable(e){this.then=performance.now(),this.initialRotation.copy(this.camera.rotation),e&&(this.activeControls=e,this.activeControls.addEventListener("change",this.updateRotation))}disable(){this.activeControls&&(this.activeControls.removeEventListener("change",this.updateRotation),this.activeControls=null)}}const Q=`import { CameraShake, useRaf } from 'trzy'

const cameraShake = new CameraShake(camera)

useRaf((time, delta) => {
  cameraShake.update(time, delta)
})
`,tt={title:"Camera Shake",parameters:{docs:{source:{code:Q}}}},V=()=>{const{camera:n,canvas:e,update:i}=B();H({controls:!1});const t=new K(n);return t.enable(),i((s,o)=>{t.update(o)}),e},x={render:V};var Y,_,D;x.parameters={...x.parameters,docs:{...(Y=x.parameters)==null?void 0:Y.docs,source:{originalSource:`{
  render
}`,...(D=(_=x.parameters)==null?void 0:_.docs)==null?void 0:D.source}}};const et=["Primary"];export{x as Primary,et as __namedExportsOrder,tt as default};
//# sourceMappingURL=index.stories-8d6f3440.js.map
