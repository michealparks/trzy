{"version":3,"file":"index.stories-9bf2cf7f.js","sources":["../../src/components/interactivity/compute.ts","../../src/components/interactivity/hook.ts","../../src/components/interactivity/plugin.ts","../../src/components/interactivity/setup.ts","../../src/components/interactivity/index.ts","../../src/components/interactivity/code.js?raw"],"sourcesContent":["import type { ComputeFunction } from './types'\nimport { context } from './context'\n\nexport const getDefaultComputeFunction = (): ComputeFunction => {\n  let width = 0\n  let height = 0\n\n  const resizeObserver = new ResizeObserver(([entry]) => {\n    width = entry?.contentRect.width ?? 0\n    height = entry?.contentRect.height ?? 0\n  })\n\n  resizeObserver.observe(context.target)\n\n  return (event) => {\n    context.pointer.set(((event.offsetX / width) * 2) - 1, -((event.offsetY / height) * 2) + 1)\n    context.raycaster.setFromCamera(context.pointer, context.camera)\n  }\n}\n","/* eslint-disable @typescript-eslint/no-dynamic-delete */\n\nimport { Object3D } from 'three'\nimport { context } from './context'\n\nexport const addInteractiveObject = (object: Object3D) => {\n  // Check if the object is already in the list\n  if (context.interactiveMap[object.uuid] !== undefined) {\n    return\n  }\n\n  context.interactiveObjects.push(object)\n  context.interactiveMap[object.uuid] = object\n}\n\nexport const removeInteractiveObject = (object: Object3D) => {\n  const index = context.interactiveObjects.indexOf(object)\n  context.interactiveObjects.splice(index, 1)\n  delete context.interactiveMap[object.uuid]\n}\n","import { useOnAdd, useOnRemove } from '../lib/add-remove'\nimport { addInteractiveObject, removeInteractiveObject } from './hook'\n\nexport const interactivityEventNames = [\n  'click',\n  'contextmenu',\n  'dblclick',\n  'wheel',\n  'pointerup',\n  'pointerdown',\n  'pointerover',\n  'pointerout',\n  'pointerenter',\n  'pointerleave',\n  'pointermove',\n  'pointermissed',\n]\n\nexport const injectInteractivityPlugin = () => {\n  const disposeAdd = useOnAdd((object) => addInteractiveObject(object))\n  const disposeRemove = useOnRemove((object) => removeInteractiveObject(object))\n\n  return () => {\n    disposeAdd()\n    disposeRemove()\n  }\n}\n\nexport { addInteractiveObject, removeInteractiveObject } from './hook'\n","/* eslint-disable func-style */\n/* eslint-disable unicorn/prefer-array-some */\n\nimport type * as THREE from 'three'\nimport type { DomEvent, Intersection, IntersectionEvent } from './types'\nimport { context } from './context'\n\nconst getIntersectionId = (event: Intersection) => {\n  return `${(event.eventObject || event.object).uuid}/${event.index}${event.instanceId}`\n}\n\nconst domEvents = [\n  ['click', false],\n  ['contextmenu', false],\n  ['dblclick', false],\n  ['wheel', false],\n  ['pointerdown', true],\n  ['pointerup', true],\n  ['pointerleave', true],\n  ['pointerenter', true],\n  ['pointermove', true],\n  ['pointercancel', true],\n] as const\n\ntype DomEventName = typeof domEvents[number][0]\n\nconst calculateDistance = (event: DomEvent) => {\n  const dx = event.offsetX - (context.initialClick[0] ?? 0)\n  const dy = event.offsetY - (context.initialClick[1] ?? 0)\n  return Math.round(Math.hypot(dx, dy))\n}\n\nconst cancelPointer = (intersections: Intersection[]) => {\n  context.hovered.forEach((hoveredObj) => {\n    /*\n     * When no objects were hit or the the hovered object wasn't found underneath the cursor\n     * we call pointerout and delete the object from the hovered elements map\n     */\n    if (\n      intersections.length === 0 ||\n      !intersections.some((hit) => {\n        return (\n          hit.object === hoveredObj.object &&\n          hit.index === hoveredObj.index &&\n          hit.instanceId === hoveredObj.instanceId\n        )\n      })\n    ) {\n      const { eventObject } = hoveredObj\n      context.hovered.delete(getIntersectionId(hoveredObj))\n\n      // Clear out intersects, they are outdated by now\n      eventObject.dispatchEvent({ type: 'pointerout', ...hoveredObj, intersections })\n      eventObject.dispatchEvent({ type: 'pointerleave', ...hoveredObj, intersections })\n    }\n  })\n}\n\nconst getHits = (): Intersection[] => {\n  const duplicates = new Set<string>()\n  const intersections: Intersection[] = []\n\n  let hits = context.raycaster\n    .intersectObjects(context.interactiveObjects)\n    // Sort by distance\n    .sort((a, b) => a.distance - b.distance)\n    // Filter out duplicates\n    .filter((item) => {\n      const id = getIntersectionId(item as Intersection)\n      if (duplicates.has(id)) {\n        return false\n      }\n      duplicates.add(id)\n      return true\n    })\n\n  if (context.filter) {\n    // eslint-disable-next-line unicorn/no-array-callback-reference, unicorn/no-array-method-this-argument\n    hits = context.filter(hits, context)\n  }\n\n  // Bubble up the events, find the event source (eventObject)\n  hits.forEach((hit) => {\n    let eventObject: THREE.Object3D | null = hit.object\n    // Bubble event up\n    while (eventObject) {\n      intersections.push({ ...hit, eventObject })\n      eventObject = eventObject.parent\n    }\n  })\n\n  return intersections\n}\n\nconst pointerMissed = (event: MouseEvent, objects: THREE.Object3D[]) => {\n  objects.forEach((object) => {\n    object.dispatchEvent({ type: 'pointermissed', event })\n  })\n}\n\nconst getEventHandler = (name: DomEventName): ((event: DomEvent) => void) => {\n  // Deal with cancelation\n  if (name === 'pointerleave' || name === 'pointercancel') {\n    return () => {\n      context.pointerOverTarget = false\n      cancelPointer([])\n    }\n  }\n\n  if (name === 'pointerenter') {\n    return () => {\n      context.pointerOverTarget = true\n    }\n  }\n\n  return (event: DomEvent) => {\n    const isPointerMove = name === 'pointermove'\n    const isClickEvent = name === 'click' || name === 'contextmenu' || name === 'dblclick'\n\n    /**\n     * Will set up the raycaster. The default implementation will use the\n     * mouse position on the renderers domElement.\n     */\n    context.compute(event, context)\n\n    const hits = context.enabled ? getHits() : []\n    const delta = isClickEvent ? calculateDistance(event) : 0\n\n    // Save initial coordinates on pointer-down\n    if (name === 'pointerdown') {\n      context.initialClick = [event.offsetX, event.offsetY]\n      context.initialHits = hits.map((hit) => hit.eventObject)\n    }\n\n    /*\n     * If a click yields no results, pass it back to the user as a miss\n     * Missed events have to come first in order to establish user-land side-effect clean up\n     */\n    if (isClickEvent && hits.length === 0 && delta <= 2) {\n      pointerMissed(event, context.interactiveObjects)\n    }\n\n    // Take care of unhover\n    if (isPointerMove) {\n      cancelPointer(hits)\n    }\n\n    let stopped = false\n\n    const stop = () => {\n      stopped = true\n    }\n\n    // Loop through all hits and dispatch events\n    for (let i = 0, l = hits.length; i < l; i += 1) {\n      const hit = hits[i]!\n      const intersectionEvent: IntersectionEvent<DomEvent> = {\n        stopped,\n        ...hit,\n        intersections: hits,\n        stopPropagation () {\n          stop()\n          intersectionEvent.stopped = true\n          const values = [...context.hovered.values()]\n          if (\n            context.hovered.size > 0 &&\n            values.some((x) => x.eventObject === hit.eventObject)\n          ) {\n            // Objects cannot flush out higher up objects that have already caught the event\n            const higher = hits.slice(0, hits.indexOf(hit))\n            cancelPointer([...higher, hit])\n          }\n        },\n        camera: context.raycaster.camera,\n        delta,\n        nativeEvent: event,\n        pointer: context.pointer,\n        ray: context.raycaster.ray,\n      }\n\n      if (isPointerMove) {\n        // Move event ...\n\n        const id = getIntersectionId(intersectionEvent)\n        const hoveredItem = context.hovered.get(id)\n        if (!hoveredItem) {\n          // If the object wasn't previously hovered, book it and call its handler\n          context.hovered.set(id, intersectionEvent)\n          hit.eventObject.dispatchEvent({ type: 'pointerover', ...intersectionEvent as IntersectionEvent<PointerEvent> })\n          hit.eventObject.dispatchEvent({ type: 'pointerenter', ...intersectionEvent as IntersectionEvent<PointerEvent> })\n        } else if (hoveredItem.stopped) {\n          // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n          intersectionEvent.stopPropagation()\n        }\n\n        // Call pointer move\n        hit.eventObject.dispatchEvent({ type: 'pointermove', ...intersectionEvent as IntersectionEvent<PointerEvent> })\n\n      // All other events\n      } else if (!isClickEvent || context.initialHits.includes(hit.eventObject)) {\n        // Missed events have to come first\n        pointerMissed(\n          event,\n          context.interactiveObjects.filter((object) => !context.initialHits.includes(object))\n        )\n\n        // Call the event\n        hit.eventObject.dispatchEvent({ type: name, ...intersectionEvent })\n      }\n\n      if (stopped) {\n        break\n      }\n    }\n  }\n}\n\nexport const setupInteractivity = () => {\n  domEvents.forEach(([eventName, passive]) => {\n    context.target.addEventListener(eventName, getEventHandler(eventName), { passive })\n  })\n\n  return () => {\n    domEvents.forEach(([eventName]) => {\n      context.target.removeEventListener(eventName, getEventHandler(eventName))\n    })\n  }\n}\n","import { getDefaultComputeFunction } from './compute'\nimport { injectInteractivityPlugin } from './plugin'\nimport { setupInteractivity } from './setup'\nimport type { ComputeFunction, FilterFunction } from './types'\nimport { context } from './context'\n\nconst interactivity = (options: {\n  target: HTMLElement\n  camera: THREE.PerspectiveCamera | THREE.OrthographicCamera\n  enabled?: boolean\n  /**\n   * The compute function is responsible for updating the state of the interactivity plugin.\n   * It needs to set up the raycaster and the pointer vector. If no compute function is provided,\n   * the plugin will use the default compute function.\n   */\n  compute?: ComputeFunction\n  /**\n   * The filter function is responsible for filtering and sorting the\n   * intersections. By default, the intersections are sorted by distance. If no\n   * filter function is provided, the plugin will use the default filter function.\n   */\n  filter?: FilterFunction\n}) => {\n  context.camera = options.camera\n  context.enabled = options.enabled ?? true\n  context.target = options.target\n  context.filter = options.filter\n  context.compute = options.compute ?? getDefaultComputeFunction()\n\n  const disposePlugin = injectInteractivityPlugin()\n  const disposeSetup = setupInteractivity()\n\n  const dispose = () => {\n    disposePlugin()\n    disposeSetup()\n  }\n\n  return { context, dispose }\n}\n\nexport type { DomEvent, Intersection, IntersectionEvent } from './types'\nexport { interactivity }\n","export default \"import * as THREE from 'three'\\nimport { interactivity } from 'trzy'\\n\\ninteractivity()\\n\\nconst mesh = new THREE.Mesh(\\n  new THREE.BoxGeometry(),\\n  new THREE.MeshStandardMaterial()\\n)\\n\\nmesh.addEventListener('pointerenter', (event) => console.log(event))\\nmesh.addEventListener('pointerleave', (event) => console.log(event))\\nmesh.addEventListener('click', (event) => console.log(event))\\n\\nmesh.addEventListener('pointerenter', (event) => {\\n  // Call stop propagation to stop events from firing on other intersections.\\n  event.stopPropagation()\\n})\\n\""],"names":["getDefaultComputeFunction","width","height","entry","context","event","addInteractiveObject","object","removeInteractiveObject","index","injectInteractivityPlugin","disposeAdd","useOnAdd","disposeRemove","useOnRemove","getIntersectionId","domEvents","calculateDistance","dx","dy","cancelPointer","intersections","hoveredObj","hit","eventObject","getHits","duplicates","hits","a","b","item","id","pointerMissed","objects","getEventHandler","name","isPointerMove","isClickEvent","delta","stopped","stop","i","l","intersectionEvent","values","x","higher","hoveredItem","setupInteractivity","eventName","passive","interactivity","options","disposePlugin","disposeSetup","code"],"mappings":"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"}