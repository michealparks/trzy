{"version":3,"file":"index.stories-3a81d7ba.js","sources":["../../src/components/three/code.js?raw"],"sourcesContent":["export default \"import { three } from 'trzy'\\n\\nconst { renderer, scene, camera, start, stop, update } = three()\\n\\n// Will start the animation loop. Only needs to be called if \\n// the autostart param is explicitly false.\\nstart()\\n\\nupdate(() => {\\n  // Will run after each frame is rendered.\\n})\\n\\n// Will stop the animation loop.\\nstop()\\n\\n// Can be called with optional parameters\\nthree({\\n  parameters: {\\n    alpha: true,\\n    antialias: true\\n  },\\n  autostart: false,\\n  shadowMap: undefined, // can be any THREE.ShadowMapType, or false.\\n  dpi: 1,\\n})\\n\\n/**\\n * Resetting the camera is possible\\n */\\nimport * as THREE from 'three'\\n\\nconst { setCamera } = three()\\n\\nsetCamera(new THREE.OrthographicCamera())\\n\\n/**\\n * Can be used with an EffectComposer\\n */\\nimport * as POST from 'postprocessing'\\n\\nthree({\\n  composer(scene, camera, renderer) {\\n    const composer = new POST.EffectComposer(renderer)\\n    composer.addPass(new POST.RenderPass(scene, camera))\\n    composer.addPass(\\n      new POST.EffectPass(\\n        camera,\\n        new POST.BloomEffect({\\n          intensity: 1,\\n          luminanceThreshold: 0.15,\\n          height: 512,\\n          width: 512,\\n          luminanceSmoothing: 0.08,\\n          mipmapBlur: true,\\n          kernelSize: POST.KernelSize.MEDIUM\\n        }),\\n        new POST.SMAAEffect({\\n          preset: POST.SMAAPreset.LOW\\n        })\\n      )\\n    )\\n    return composer\\n  }\\n})\\n\""],"names":["code"],"mappings":"8EAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;"}