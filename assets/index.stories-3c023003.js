var B=Object.defineProperty;var T=(a,t,e)=>t in a?B(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var i=(a,t,e)=>(T(a,typeof t!="symbol"?t+"":t,e),e);import{E as U,a as X}from"./index-b1a306c2.js";import{s as H}from"./lib-557be54d.js";const I=.5*(Math.sqrt(3)-1),f=(3-Math.sqrt(3))/6,M=a=>Math.floor(a)|0,_=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function E(a=Math.random){const t=J(a),e=new Float64Array(t).map(s=>_[s%12*2]),n=new Float64Array(t).map(s=>_[s%12*2+1]);return function(o,c){let S=0,x=0,P=0;const j=(o+c)*I,g=M(o+j),C=M(c+j),A=(g+C)*f,L=g-A,O=C-A,l=o-L,h=c-O;let R,b;l>h?(R=1,b=0):(R=0,b=1);const F=l-R+f,k=h-b+f,v=l-1+2*f,q=h-1+2*f,z=g&255,N=C&255;let m=.5-l*l-h*h;if(m>=0){const r=z+t[N],p=e[r],d=n[r];m*=m,S=m*m*(p*l+d*h)}let y=.5-F*F-k*k;if(y>=0){const r=z+R+t[N+b],p=e[r],d=n[r];y*=y,x=y*y*(p*F+d*k)}let u=.5-v*v-q*q;if(u>=0){const r=z+1+t[N+1],p=e[r],d=n[r];u*=u,P=u*u*(p*v+d*q)}return 70*(S+x+P)}}function J(a){const e=new Uint8Array(512);for(let n=0;n<512/2;n++)e[n]=n;for(let n=0;n<512/2-1;n++){const s=n+~~(a()*(256-n)),o=e[n];e[n]=e[s],e[s]=o}for(let n=256;n<512;n++)e[n]=e[n-256];return e}class K{constructor(t){i(this,"decay",!1);i(this,"decayRate",.65);i(this,"intensity",.5);i(this,"maxPitch",.05);i(this,"maxRoll",.05);i(this,"maxYaw",.05);i(this,"pitchFrequency",5e-4);i(this,"rollFrequency",5e-4);i(this,"yawFrequency",5e-4);i(this,"time",0);i(this,"yawNoise",E());i(this,"pitchNoise",E());i(this,"rollNoise",E());i(this,"then",0);i(this,"activeControls",null);i(this,"initialRotation",new U);i(this,"camera");i(this,"updateRotation",()=>{this.initialRotation.copy(this.camera.rotation)});i(this,"update",t=>{this.time+=t;const e=this.intensity**2,n=this.maxYaw*e*this.yawNoise(this.time*this.yawFrequency,1),s=this.maxPitch*e*this.pitchNoise(this.time*this.pitchFrequency,1),o=this.maxRoll*e*this.rollNoise(this.time*this.rollFrequency,1);this.camera.rotation.set(this.initialRotation.x+s,this.initialRotation.y+n,this.initialRotation.z+o),this.decay&&this.intensity>0&&(this.intensity-=this.decayRate*t,this.intensity<0?this.intensity=0:this.intensity>1&&(this.intensity=1))});this.camera=t}enable(t){this.then=performance.now(),this.initialRotation.copy(this.camera.rotation),t&&(this.activeControls=t,this.activeControls.addEventListener("change",this.updateRotation))}disable(){this.activeControls&&(this.activeControls.removeEventListener("change",this.updateRotation),this.activeControls=null)}}const Q=`import { CameraShake, useRaf } from 'trzy'

const cameraShake = new CameraShake(camera)

// Optionally pass orbitControls if they exist
cameraShake.enable(orbitControls)

useRaf((_, delta) => {
  // Before rendering your scene
  cameraShake.update(delta)
})

cameraShake.disable()`,tt={title:"Camera Shake",parameters:{docs:{source:{code:Q}}}},V=()=>{const{scene:a,camera:t,canvas:e,update:n,beforeRender:s}=X();return H({scene:a,camera:t,canvas:e,update:n,controls:!0}).then(o=>{const c=new K(t.current);c.enable(o),s((S,x)=>{c.update(x)})}),e},w={render:V};var G,Y,D;w.parameters={...w.parameters,docs:{...(G=w.parameters)==null?void 0:G.docs,source:{originalSource:`{
  render
}`,...(D=(Y=w.parameters)==null?void 0:Y.docs)==null?void 0:D.source}}};const et=["Primary"];export{w as Primary,et as __namedExportsOrder,tt as default};
//# sourceMappingURL=index.stories-3c023003.js.map
